- name: set variable
  set_fact:
    consul_token: "{{ lookup('env', 'consul_master_token') }}"

#*************************************************************************************************#
# mc => minio (allow)
#*************************************************************************************************#
- name: Check if intention mc => minio (allow) exists
  shell: consul intention match -source mc
  register: mc_intention
  when: lookup('env', 'consul_acl') | bool and lookup('env', 'consul_acl_default_policy') == 'deny'
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_token }}"

- name: Consul create intention mc => minio (allow)
  shell: consul intention create mc minio
  when: lookup('env', 'consul_acl') | bool and lookup('env', 'consul_acl_default_policy') == 'deny' and mc_intention.stdout_lines == []
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_token }}"

#*************************************************************************************************#
# hive-metastore => postgres (allow),hive-metastore => minio (allow)
#*************************************************************************************************#
- name: Check if intentions from hive-metastore exist
  shell: consul intention match -source hive-metastore
  register: hive_metastore_intention
  when: lookup('env', 'consul_acl') | bool and lookup('env', 'consul_acl_default_policy') == 'deny'
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_token }}"

- name: Consul create intention hive-metastore => postgres (allow),hive-metastore => minio (allow)
  shell: |
      consul intention create hive-metastore postgres
      consul intention create hive-metastore minio
  when: lookup('env', 'consul_acl') | bool and lookup('env', 'consul_acl_default_policy') == 'deny' and hive_metastore_intention.stdout_lines == []
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_token }}"


# ====All the below listed intentions are required for running tests ===#

#*************************************************************************************************#
# trino-local => trino (allow)
#*************************************************************************************************#
- name: Check if intention trino-local => trino (allow) exists
  shell: consul intention match -source trino-local
  register: trino_local_intention
  when: lookup('env', 'consul_acl') | bool and lookup('env', 'consul_acl_default_policy') == 'deny'
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_token }}"

- name: Consul create intention trino-local => trino (allow)
  shell: consul intention create trino-local trino
  when: lookup('env', 'consul_acl') | bool and lookup('env', 'consul_acl_default_policy') == 'deny' and trino_local_intention.stdout_lines == []
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_token }}"

#*************************************************************************************************#
# minio-local => minio (allow)
#*************************************************************************************************#
- name: Check if intention minio-local => minio (allow) exists
  shell: consul intention match -source minio-local
  register: minio_local_intention
  when: lookup('env', 'consul_acl') | bool and lookup('env', 'consul_acl_default_policy') == 'deny'
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_token }}"

- name: Consul create intention minio-local => minio (allow)
  shell: consul intention create minio-local minio
  when: lookup('env', 'consul_acl') | bool and lookup('env', 'consul_acl_default_policy') == 'deny' and minio_local_intention.stdout_lines == []
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_token }}"

#*************************************************************************************************#
# trino => hive-metastore(allow)
#*************************************************************************************************#
- name: Check if intention trino => hive-metastore (allow) exists
  shell: consul intention match -source trino
  register: trino_intention
  when: lookup('env', 'consul_acl') | bool and lookup('env', 'consul_acl_default_policy') == 'deny'
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_token }}"

- name: Consul create intention trino => hive-metastore (allow)
  shell: consul intention create trino hive-metastore
  when: lookup('env', 'consul_acl') | bool and lookup('env', 'consul_acl_default_policy') == 'deny' and trino_intention.stdout_lines == []
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_token }}"

#*************************************************************************************************#
# trino-sidecar-proxy => hive-metastore(allow),trino-sidecar-proxy => minio(allow)
#*************************************************************************************************#
- name: Check if intentions from trino-sidecar-proxy exist
  shell: consul intention match -source trino-sidecar-proxy
  register: trino_sidecar_proxy_intention
  when: lookup('env', 'consul_acl') | bool and lookup('env', 'consul_acl_default_policy') == 'deny'
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_token }}"

- name: Consul create intention trino-sidecar-proxy => hive-metastore (allow) and trino-sidecar-proxy => minio (allow)
  shell: |
    consul intention create trino-sidecar-proxy hive-metastore
    consul intention create trino-sidecar-proxy minio
  when: lookup('env', 'consul_acl') | bool and lookup('env', 'consul_acl_default_policy') == 'deny' and trino_sidecar_proxy_intention.stdout_lines == []
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_token }}"